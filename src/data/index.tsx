import type { interviewDataType } from "../types";

// export const interviewData: interviewDataType[] = [
//   {
//     id: 1,
//     question: "ما هو HTML؟",
//     difficulty: "مبتدئ",
//     language: "html",
//     markdown: `
// HTML تعني **لغة ترميز النص الفائق** (Hyper Text Markup Language). وهي لغة ترميز تتكون من وسوم (tags) مختلفة. تُستخدم لتعريف هيكلة صفحات الويب. تعتبر HTML اللبنة الأساسية لصفحة الويب، والتي تُستخدم لعرض النصوص، الصور، والمحتويات الأخرى.
//     `,
//   },
//   {
//     id: 2,
//     question: "ما هي العناصر الدلالية (Semantic) في HTML؟",
//     difficulty: "متوسط",
//     language: "html",
//     markdown: `
// العناصر الدلالية في HTML هي العناصر التي تحتوي على معنى المحتوى وهيكلة مستند HTML. هذه العناصر تحتوي على محتوى مرتبط بأسمائها أو يعكس أسمائها.

// فيما يلي بعض عناصر HTML الدلالية:

// - Header
// - Main
// - Section
// - Article
// - Aside
// - Footer
//     `,
//   },
//   {
//     id: 3,
//     question: "ما الفرق بين عناصر Inline وعناصر Block في HTML؟",
//     difficulty: "متوسط",
//     language: "html",
//     markdown: `
// | عنصر Inline | عنصر Block |
// |-------------|------------|
// | لا يبدأ بسطر جديد | يبدأ دائمًا بسطر جديد |
// | يأخذ فقط العرض الضروري | يأخذ العرض الكامل المتاح |
// | لا يمكن أن يحتوي على عناصر Block | يمكن أن يحتوي على عناصر Inline و Block |
// | عادة لا يمكن تعديل ارتفاعه وعرضه | يمكن تعديل ارتفاعه وعرضه بحرية |
// | أمثلة: \`<span>\`، \`<a>\`، \`<strong>\`، \`<em>\` إلخ | أمثلة: \`<div>\`، \`<p>\`، \`<h1>\` إلخ |
//     `,
//   },
//   {
//     id: 4,
//     question:
//       "ما هي القوائم في HTML؟ اشرح أنواع القوائم المختلفة المتاحة في HTML",
//     difficulty: "مبتدئ",
//     language: "html",
//     markdown: `
// في HTML، تُستخدم القوائم لتمثيل مجموعة من العناصر المختلفة. هناك ثلاثة أنواع من القوائم المتاحة في HTML، كما هو موضح أدناه:

// #### 1. قائمة غير مرتبة:
// يتم تعريفها باستخدام الوسوم \`<ul>\` و \`<li>\`. بشكل افتراضي، تمثل العناصر بنقاط نقطية.

// \`\`\`html
// <ul>
//     <li>عنصر القائمة 1</li>
//     <li>عنصر القائمة 2</li>
//     <li>عنصر القائمة 3</li>
// </ul>
// \`\`\`

// #### 2. قائمة مرتبة:
// يتم تعريفها باستخدام الوسوم \`<ol>\` و \`<li>\`. بشكل افتراضي، تمثل قائمة العناصر بأرقام رقمية.

// \`\`\`html
// <ol>
//     <li>عنصر القائمة 1</li>
//     <li>عنصر القائمة 2</li>
//     <li>عنصر القائمة 3</li>
// </ol>
// \`\`\`
//     `,
//   },
//   {
//     id: 5,
//     question: "ما هو نموذج الصندوق (Box Model) في CSS؟",
//     difficulty: "متوسط",
//     language: "css",
//     markdown: `
// يصف نموذج الصندوق في CSS الصناديق المستطيلة التي يتم إنشاؤها للعناصر في شجرة المستند. كل صندوق له منطقة محتوى مع مناطق اختيارية للحشوة (padding)، الحدود (border)، والهوامش (margin).

// يتكون نموذج الصندوق من:
// - **المحتوى**: المحتوى الفعلي للصندوق
// - **الحشوة (Padding)**: مساحة حول المحتوى
// - **الحدود (Border)**: حدود حول الحشوة والمحتوى
// - **الهوامش (Margin)**: مساحة خارج الحدود

// \`\`\`css
// .box {
//   width: 300px;
//   padding: 20px;
//   border: 5px solid gray;
//   margin: 10px;
// }
// \`\`\`
//     `,
//   },
//   {
//     id: 6,
//     question: "ما هي React Hooks؟",
//     difficulty: "متقدم",
//     language: "react",
//     markdown: `
// Hooks هي إضافة جديدة في React 16.8. تتيح لك استخدام الحالة وميزات React الأخرى دون كتابة class.

// #### Hooks الأساسية:
// - **useState**: تُرجع قيمة state ودالة لتحديثها
// - **useEffect**: تنفذ تأثيرات جانبية في مكونات الدالة
// - **useContext**: تقبل كائن context وتُرجع قيمة context الحالية

// #### مثال على useState:
// \`\`\`jsx
// import React, { useState } from 'react';

// function Example() {
//   const [count, setCount] = useState(0);

//   return (
//     <div>
//       <p>لقد نقرت {count} مرات</p>
//       <button onClick={() => setCount(count + 1)}>
//         انقر هنا
//       </button>
//     </div>
//   );
// }
// \`\`\`
//     `,
//   },
// ];

export const interviewData: interviewDataType[] = [
  {
    id: 1,
    question: "ما هو HTML؟",
    difficulty: "مبتدئ",
    language: "html",
    markdown: `
HTML تعني **لغة ترميز النص الفائق** (Hyper Text Markup Language). وهي لغة ترميز تتكون من وسوم (tags) مختلفة. تُستخدم لتعريف هيكلة صفحات الويب. تعتبر HTML اللبنة الأساسية لصفحة الويب، والتي تُستخدم لعرض النصوص، الصور، والمحتويات الأخرى.
    `,
  },
  {
    id: 2,
    question: "ما هي العناصر الدلالية (Semantic) في HTML؟",
    difficulty: "مبتدئ",
    language: "html",
    markdown: `
العناصر الدلالية في HTML هي العناصر التي تعبر عن معنى وهيكلة المحتوى داخل المستند. ببساطة: اسم الوسم بيعكس الغرض من المحتوى.

من الأمثلة على العناصر الدلالية:

- \`<header>\`
- \`<main>\`
- \`<section>\`
- \`<article>\`
- \`<aside>\`
- \`<footer>\`
    `,
  },
  {
    id: 3,
    question: "ما الفرق بين عناصر Inline وعناصر Block في HTML؟",
    difficulty: "مبتدئ",
    language: "html",
    markdown: `
**Element Inline**:
- ما بيبدأ بسطر جديد
- بياخد قد عرض المحتوى
- أمثلة: <span>, <a>, <em>

**Element Block**:
- بيبدأ دايمًا بسطر جديد
- بياخد العرض الكامل
- أمثلة: <div>, <p>, <h1>
`,
  },
  {
    id: 4,
    question: "ما هي القوائم في HTML؟ اشرح أنواع القوائم المختلفة.",
    difficulty: "مبتدئ",
    language: "html",
    markdown: `
في HTML، القوائم بتُستخدم لعرض مجموعة عناصر بشكل مرتب أو غير مرتب.

### 1. قائمة غير مرتبة (Unordered List):
تُكتب باستخدام \`<ul>\`  \`<li>\`. العناصر بتظهر بنقاط.

\`\`\`html
<ul>
  <li>عنصر 1</li>
  <li>عنصر 2</li>
  <li>عنصر 3</li>
</ul>
\`\`\`

### 2. قائمة مرتبة (Ordered List):
تُكتب باستخدام \`<ol>\` \`<li>\`. العناصر بتظهر بأرقام.

\`\`\`html
<ol>
  <li>عنصر 1</li>
  <li>عنصر 2</li>
  <li>عنصر 3</li>
</ol>
\`\`\`

### 3. قائمة تعريفية (Definition List):
تُستخدم لعرض المصطلحات مع تعريفها، باستخدام \`<dl>\` \`<dt>\` \`<dd>\`.

\`\`\`html
<dl>
  <dt>HTML</dt>
  <dd>لغة هيكلة صفحات الويب</dd>

  <dt>CSS</dt>
  <dd>لغة تنسيق صفحات الويب</dd>
</dl>
\`\`\`
    `,
  },
  {
    id: 5,
    question: "ما الفرق بين وسم <div> و <span>؟",
    difficulty: "مبتدئ",
    language: "html",
    markdown: `- **<div>**
  - عنصر Block
  - يُستخدم لتجميع وتنظيم أقسام كبيرة من الصفحة
  - يبدأ بسطر جديد ويأخذ كامل العرض
  - غالبًا لتقسيم هيكل الصفحة

- **<span>**
  - عنصر Inline
  - يُستخدم لتنسيق أجزاء صغيرة من النص أو المحتوى
  - ما بيبدأ بسطر جديد، بياخد قد عرض المحتوى
  - غالبًا لتنسيق كلمة أو جملة محددة
`,
  },
];
